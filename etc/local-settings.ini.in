[app:main]
use = egg:iris.service

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pyramid.includes =
    pyramid_jinja2

pyramid_swagger.exclude_paths = ^(/docs|/admin|/swaggerui|/v1/views|/probe_status)
pyramid_swagger.enable_swagger_spec_validation = True
pyramid_swagger.enable_request_validation = True
pyramid_swagger.enable_response_validation = False
pyramid_swagger.enable_path_validation = True
pyramid_swagger.enable_api_doc_views = True
pyramid_swagger.include_read_only_properties = False
pyramid_swagger.pass_property_on_missing_spec = False
pyramid_swagger.expand_missing_properties = False
pyramid_swagger.dereference_served_schema = True

auth.secret = supersecret
auth.cookie_name = iris-tkt

sso.apikey.local = local
sso.apikey.nwch = 08f9e7d03d2c83e9e8774299d114c154

iris.apikey.local = local
iris.apikey.nwch = b428db796829443ed2062702deb02b6c

iris.secret.petition = strong-petition-secret

iris.city.treshold = 100
iris.approval.days = 30
iris.letter.wait.days = 30

frontend.domain = http://frontend
frontend.petition.confirmpath = /confirm/petition/email
frontend.supporter.confirmpath = /confirm/supporter/email

# URLs used for petitions in mails
frontend.petition.urls.url = http://frontend/petitons/{id}
frontend.petition.urls.edit = http://frontend/petitons/{id}/edit
frontend.petition.urls.city = http://frontend/petitions/{city_url_id}
frontend.petition.urls.brief = http://frontend/petitons/{id}/brief
frontend.petition.urls.letter = http://admin/#/petition/{id}/letter/cover
frontend.petition.urls.appendix = http://admin/#/petition/{id}/letter/appendix?token={token}

domains.automatic_mentions =
    .*example\.com.*

statemachine.petitions.cron = */5 * * * *

static.docs = iris.service:docs
              docs
static.admin = ${buildout:directory}/../iris-admin/public
               admin

# also add this URL to 'pyramid_swagger.exclude_paths'
swagger_ui.url = swaggerui

cors.Allow-Origin = *
cors.Allow-Methods = POST,GET,DELETE,PUT,OPTIONS
cors.Allow-Headers = Origin, Content-Type, Accept, Authorization
cors.Allow-Credentials = true
cors.Max-Age = 86400

og.https_proxy_url =

aws.testing = true

temp.dir = /tmp/iris-service

# image proxy not available on localhost
imageproxy.url = http://imageproxy

mandrill.key = mock

twitter.api.mock = 1
# twitter.api.consumer_key = 
# twitter.api.consumer_secret = 
# twitter.api.access_token_key = 
# twitter.api.access_token_secret =

twitter.template.active = Unterstützer gesucht! Es gibt eine neue Petition in {{ city.name }}. {{ urls.url }} 
twitter.template.winner = {{ owner.firstname }} {{ owner.lastname }} hat mit der Petition die für {{ city.name }} nötige Anzahl von {{ supporters.required }} Stimmen erreicht! {{ urls.url }} 
twitter.template.closed = {{ city.name }} hat die Petition von {{ owner.firstname }} {{ owner.lastname }} beantwortet. {{ urls.url }} 

es.hosts = localhost:${ports:crate}

###
# wsgi server configuration
###

[server:main]
use = egg:iris.service#server
host = 0.0.0.0
port = %(http_port)s

###
# logging configuration
###

[loggers]
keys = root

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

